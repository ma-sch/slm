- name: "Define inventory"
  hosts: localhost
  pre_tasks:
    - set_fact:
        DEPLOYMENT_HOST_HOSTNAME: "{{ lookup('ansible.builtin.env', 'DEPLOYMENT_HOST_HOSTNAME') }}"
        DEPLOYMENT_HOST_USER: "{{ lookup('ansible.builtin.env', 'DEPLOYMENT_HOST_USER') }}"
        DEPLOYMENT_HOST_PASSWORD: "{{ lookup('ansible.builtin.env', 'DEPLOYMENT_HOST_PASSWORD') }}"
  tasks:
    - fail:
        msg: "Deployment target is remote host, but environment variable 'DEPLOYMENT_HOST_HOSTNAME' is not set"
      when: (DEPLOYMENT_HOST_HOSTNAME != 'localhost') and (DEPLOYMENT_HOST_HOSTNAME != '127.0.0.1') and (DEPLOYMENT_HOST_HOSTNAME != 'slm.local') 
            and ((DEPLOYMENT_HOST_USER is not defined) or (DEPLOYMENT_HOST_USER|length == 0))
    - fail:
        msg: "Deployment target is remote host, but environment Variable 'DEPLOYMENT_HOST_PASSWORD' is not set"
      when: (DEPLOYMENT_HOST_HOSTNAME != 'localhost') and (DEPLOYMENT_HOST_HOSTNAME != '127.0.0.1') and (DEPLOYMENT_HOST_HOSTNAME != 'slm.local')
        and ((DEPLOYMENT_HOST_PASSWORD is not defined) or (DEPLOYMENT_HOST_PASSWORD|length == 0))
    - ansible.builtin.add_host:
        name: '{{ DEPLOYMENT_HOST_HOSTNAME }}'
        groups: "slm"
        ansible_host: '{{ DEPLOYMENT_HOST_HOSTNAME }}'
        ansible_ssh_user: '{{ DEPLOYMENT_HOST_USER }}'
        ansible_ssh_pass: '{{ DEPLOYMENT_HOST_PASSWORD }}'
        ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
      when: (DEPLOYMENT_HOST_HOSTNAME != 'localhost') and (DEPLOYMENT_HOST_HOSTNAME != '127.0.0.1') and (DEPLOYMENT_HOST_HOSTNAME != 'slm.local')
            and (DEPLOYMENT_HOST_USER is defined) and (DEPLOYMENT_HOST_USER|length > 0)
            and (DEPLOYMENT_HOST_PASSWORD is defined) and (DEPLOYMENT_HOST_PASSWORD|length > 0)
    - ansible.builtin.group_by:
        key: 'slm'
      when: (DEPLOYMENT_HOST_HOSTNAME == 'localhost') or (DEPLOYMENT_HOST_HOSTNAME == '127.0.0.1') or (DEPLOYMENT_HOST_HOSTNAME == 'slm.local')

- name: "Install Service Lifecycle Management"
  hosts: localhost
  gather_facts: yes
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - config.yml
  pre_tasks:
    - name: "Import config from env.yml"
      include_vars: "/env/env.yml"
    - name: "Import override config from env.override.yml"
      include_vars: "/env/env.override.yml"
    - set_fact:
        SLM_HOSTNAME: "{{ lookup('ansible.builtin.env', 'SLM_HOSTNAME') }}"
  tasks:
    - name: "Define global variables"
      block:
        - set_fact:
            CONSUL_URL: "{{ CONSUL_SCHEME }}://{{ CONSUL_HOST }}:{{ CONSUL_PORT }}"
            KEYCLOAK_AUTH_URL: "{{ KEYCLOAK_SCHEME }}://{{ KEYCLOAK_HOST }}:{{ KEYCLOAK_PORT }}/auth"
            VAULT_URL: "{{ VAULT_SCHEME }}://{{ VAULT_HOST }}:{{ VAULT_PORT }}"
            AWX_URL: "{{ AWX_SCHEME }}://{{ AWX_HOST }}:{{ AWX_PORT }}"
            MINIO_API_URL: "{{ MINIO_SCHEME }}://{{ MINIO_HOST }}:{{ MINIO_API_PORT }}"
            MINIO_CONSOLE_URL: "{{ MINIO_SCHEME }}://{{ MINIO_HOST }}:{{ MINIO_CONSOLE_PORT }}"

    - name: "Start Consul"
      include_role:
        name: consul/init
        tasks_from: start.yml
      vars:
        _store_compose_file: /compose/consul.yml

    - name: "Start Keycloak"
      include_role:
        name: keycloak/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/keycloak.yml

    - name: "Init Consul"
      include_role:
        name: consul/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"

    - name: "Start Vault"
      include_role:
        name: vault/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/vault.yml

    - name: "Start RabbitMQ"
      include_role:
        name: rabbitmq/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/rabbitmq.yml

    - name: "Start Minio"
      include_role:
        name: minio/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/minio.yml

    - name: "Start AWX"
      include_role:
        name: awx/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _vault_token: "{{ vault_root_token }}"
        _store_compose_file: /compose/awx.yml

    - name: "Start AAS infrastructure"
      include_role:
        name: aas/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/aas.yml

    - name: "Start monitoring"
      ansible.builtin.include_role:
        name: monitoring/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/monitoring.yml

    - name: "Start internal SLM components"
      include_role:
        name: slm/init
      vars:
        _consul_token: "{{ CONSUL_MASTER_TOKEN }}"
        _store_compose_file: /compose/slm.yml

    - debug:
        msg: "Eclipse Service Lifecycle Management version '{{ SLM_VERSION }}' successfully installed. Your Consul master token: {{ CONSUL_MASTER_TOKEN }}"
