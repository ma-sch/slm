### Inputs
- name: "Assert inputs of 'keycloak/client | assign_client_role_to_service_account.yml'"
  assert:
    that:
      - (keycloak.url.external is defined) and (keycloak.url.external|length > 0)
      - (_keycloak_realm_name is defined) and (_keycloak_realm_name|length > 0)
      - (KEYCLOAK.ADMIN_USERNAME is defined) and (KEYCLOAK.ADMIN_USERNAME|length > 0)
      - (KEYCLOAK.ADMIN_PASSWORD is defined) and (KEYCLOAK.ADMIN_PASSWORD|length > 0)
      - (_keycloak_client is defined) and (_keycloak_client|length > 0)
      - (_client_id is defined) and (_client_id|length > 0)
      - (_client_role_name is defined) and (_client_role_name|length > 0)

- include_tasks: authentication/get_admin_access_token.yml

### Get client with enabled service accounts
- name: "Get Client '{{ client_with_service_account_id }}'"
  uri:
    url: "{{ keycloak.url.external }}/admin/realms/{{ _keycloak_realm_name }}/clients?clientId={{ _keycloak_client.client_id }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output__keycloak_client
  no_log: true
- set_fact:
    _keycloak_client_with_service_account: "{{ output__keycloak_client.json | first }}"

### Get service account user
- name: "Get Service Account User for client '{{ client_with_service_account_id }}' (UUID: '{{ _keycloak_client_with_service_account.id }}')"
  uri:
    url: "{{ keycloak.url.external }}/admin/realms/{{ _keycloak_realm_name }}/clients/{{ _keycloak_client_with_service_account.id }}/service-account-user"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output__keycloak_client_service_account_user
  no_log: true
- set_fact:
    keycloak_service_account_user: "{{ output__keycloak_client_service_account_user.json }}"

### Get client with roles to which the service account should be added
- name: "Get Client '{{ _client_id }}'"
  uri:
    url: "{{ keycloak.url.external }}/admin/realms/{{ _keycloak_realm_name }}/clients?clientId={{ _client_id }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_get__keycloak_client
  no_log: true
- set_fact:
    output__keycloak_client: "{{ output_get__keycloak_client.json | first }}"

- name: "Get Client Role '{{ _client_role_name }}'"
  uri:
    url: "{{ keycloak.url.external }}/admin/realms/{{ _keycloak_realm_name }}/clients/{{ output__keycloak_client.id }}/roles?search={{ _client_role_name }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output__keycloak_client_roles
#  no_log: true
- set_fact:
    _keycloak_client_role: "{{ output__keycloak_client_roles.json | first }}"

- name: "Map User to Client Role"
  uri:
    url: "{{ keycloak.url.external }}/admin/realms/{{ _keycloak_realm_name }}/users/{{ keycloak_service_account_user.id }}/role-mappings/clients/{{ output__keycloak_client.id }}"
    validate_certs: no
    method: POST
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    body_format: json
    body:
      - id: "{{ _keycloak_client_role.id }}"
        name: "{{ _keycloak_client_role.name }}"
    status_code: 204
