- name: "Traefik | Generate self-signed certificate or import existing certificate"
  include_role:
    name: cert
    tasks_from: generate_or_import_certificate
  vars:
    _common_name: "{{ ENV.SLM_HOSTNAME }}"

- name: "Traefik | Add static config to Consul"
  community.general.consul_kv:
    scheme: "{{ ENV.CONSUL.SCHEME.INTERNAL }}"
    host: "{{ ENV.CONSUL.HOST.INTERNAL }}"
    port: "{{ ENV.CONSUL.PORT.INTERNAL }}"
    token: "{{ _consul_token }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  with_items:
    - { key: "traefik/tls/stores/default/defaultCertificate/certFile", value: "/certs/certificate.crt" }
    - { key: "traefik/tls/stores/default/defaultCertificate/keyFile", value: "/certs/certificate.key" }

- block:
  - set_fact:
      _traefik_additional_config: {}
    when: ENV.TRAEFIK.ADDITIONAL_CONFIG is not mapping
  - set_fact:
      _traefik_additional_config: "{{ ENV.TRAEFIK.ADDITIONAL_CONFIG | from_yaml }}"
    when: ENV.TRAEFIK.ADDITIONAL_CONFIG is mapping
  - name: "Traefik | Add additional config to Consul"
    community.general.consul_kv:
      scheme: "{{ ENV.CONSUL.SCHEME.INTERNAL }}"
      host: "{{ ENV.CONSUL.HOST.INTERNAL }}"
      port: "{{ ENV.CONSUL.PORT.INTERNAL }}"
      token: "{{ _consul_token }}"
      key: "traefik/{{ item.key | replace('.', '/') }}"
      value: "{{ item.value }}"
    with_items: "{{ _traefik_additional_config | default({}) | dict2items }}"

- name: "Traefik | Create compose definition from template"
  set_fact:
    traefik_compose: "{{ lookup('template', 'traefik.yml') }}"

- name: "Traefik | Start Traefik containers"
  community.docker.docker_compose_v2:
    project_name: eclipse-slm
    definition: "{{ traefik_compose | from_yaml}}"
    state: present
    pull: "{{ ENV.PULL_DOCKER_IMAGES }}"
  register: traefik_compose_start_output

- name: "Traefik | Wait for Traefik ('{{ traefik.url.api }}') being up"
  uri:
    url: "{{ traefik.url.api }}/"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 120
  delay: 3

- name: "Traefik | Store resulting compose file"
  template:
    src: "traefik.yml"
    dest: "{{ _store_compose_file }}"
  when: (_store_compose_file is defined) and (_store_compose_file|length > 0)