awx_keycloak_client:
    client_id: awx
    public_client: false
    service_accounts_enabled: false
    assign_client_role_to_service_account: false
    protocol_mappers: {}

awx_slm_organization_name: "Service Lifecycle Management"

awx_credential_types:
  - name: Consul
    inputs:
      fields:
        - id: consul_url
          type: string
          label: Consul URL
          multiline: false
        - id: consul_token
          type: string
          label: Consul Token
          secret: true
          multiline: false
      required:
        - consul_url
        - consul_token
    injectors:
      env:
        CONSUL_TOKEN: "{{ _awx_consul_token }}"
        CONSUL_URL: "{{ consul.url.internal }}"
  - name: HashiCorp Vault
    inputs:
      fields:
        - id: vault_url
          type: string
          label: Vault URL
          secret: false
          multiline: false
        - id: vault_approle_role_id
          type: string
          label: Vault App Role - Role ID
          secret: false
          multiline: false
        - id: vault_approle_secret_id
          type: string
          label: Vault App Role - Secret ID
          secret: true
          multiline: false
      required:
        - vault_url
        - vault_approle_role_id
        - vault_approle_secret_id
    injectors:
      env:
        VAULT_URL: "{{ vault.url.internal }}"
        VAULT_APPROLE_ROLE_ID: "{{ app_configs.awx.vault['app-role']['role-id'] }}"
        VAULT_APPROLE_SECRET_ID: "{{ app_configs.awx.vault['app-role']['secret-id'] }}"
  - name: Minio
    inputs:
      fields:
        - id: minio_url
          type: string
          label: Minio URL
          multiline: false
        - id: minio_access_key
          type: string
          label: Minio Access Key
          secret: false
          multiline: false
        - id: minio_secret_key
          type: string
          label: Minio Secret Key
          secret: true
          multiline: false
      required:
        - minio_url
        - minio_access_key
        - minio_secret_key
    injectors:
      env:
        MINIO_URL: "{{ minio.url.api.internal }}"
        MINIO_ACCESS_KEY: "{{ app_configs.awx.minio['access-key'] }}"
        MINIO_SECRET_KEY: "{{ app_configs.awx.minio['secret-key'] }}"

awx_credentials:
  - name: Consul
    credential_type: Consul
    inputs:
      consul_url: "http://consul:8500"
      consul_token: "{{ _awx_consul_token }}"
  - name: HashiCorp Vault
    credential_type: HashiCorp Vault
    inputs:
      vault_url: "http://vault:8200"
      vault_approle_role_id: "{{ app_configs.awx.vault['app-role']['role-id']}}"
      vault_approle_secret_id: "{{ app_configs.awx.vault['app-role']['secret-id'] }}"
  - name: Minio
    credential_type: Minio
    inputs:
      minio_url: "{{ minio.url.api.internal }}"
      minio_access_key: "{{ app_configs.awx.minio['access-key'] }}"
      minio_secret_key: "{{ app_configs.awx.minio['secret-key'] }}"

vault_approles:
  - name: awx
    policies:
      - name: "awx"
        policy: "path \"resources/*\" { capabilities = [\"read\", \"list\", \"create\", \"update\"] } \npath \"service-repositories/*\" { capabilities = [\"read\", \"list\"] }"

awx_jwt_authenticator:
  keycloak_client:
    client_id: awx_jwt_authenticator
    public_client: false
    service_accounts_enabled: false
    assign_client_role_to_service_account: false
    protocol_mappers: {}
  vault:
    approle:
      name: awx_jwt_authenticator
      policies:
        - name: "awx_jwt_authenticator"
          policy: "path \"awx_jwt_authenticator/*\" { capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"] }"
    kv_secret_engines:
    - "awx_jwt_authenticator"
