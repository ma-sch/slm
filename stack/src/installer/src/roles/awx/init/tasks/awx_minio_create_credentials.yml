### Inputs
- name: "AWX | MINIO | Assert inputs of 'slm/init | create_and_store_config.yml'"
  assert:
    that:
      - (_app_name is defined) and (_app_name|length > 0)   # Name of the app a config should be created and stored

- name: "AWX | MINIO | Get config from Consul"
  include_role:
    name: consul/client
    tasks_from: get_app_config

- name: "AWX | MINIO | Create password when not defined"
  block:
    - name: "AWX | MINIO | Create passwords"
      set_fact:
        minio_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=24) }}"
        minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=20) }}"
        minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=40) }}"

    - name: "AWX | MINIO | Create Minio user "
      include_role:
        name: minio/client
        tasks_from: add_user.yml
      vars:
        _alias: "slm"
        _user: "{{ _app_name }}"
        _password: "{{ minio_password }}"
        _access_key: "{{ minio_access_key }}"
        _secret_key: "{{ minio_secret_key }}"

    - name: "AWX | MINIO | Store config in Consul"
      include_role:
        name: consul/client
        tasks_from: create_or_add_config
      vars:
        _config:
          minio:
            scheme: "{{ MINIO.SCHEME.INTERNAL }}"
            host: "{{ MINIO.HOST.INTERNAL }}"
            port: "{{ MINIO.API_PORT.INTERNAL }}"
            user: "{{ _app_name }}"
            password: "{{ minio_password }}"
            access-key: "{{ minio_access_key }}"
            secret-key: "{{ minio_secret_key }}"


  when: app_configs[_app_name]['minio'] is not defined

