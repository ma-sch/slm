- name: "Export configuration"
  hosts: localhost
  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: "Load common config"
      set_fact:
        CONFIGURE_CORE_PROJECT: "{{ lookup('env', 'CONFIGURE_CORE_PROJECT') }}"
#        target_host: "{{ lookup('env', 'SLM_HOSTNAME') }}"
        LOCAL_HOSTNAME: "{{ lookup('env', 'LOCAL_HOSTNAME') }}"

    - name: "Load Consul config"
      set_fact:
        consul_scheme: "{{ lookup('env', 'CONSUL_SCHEME') }}"
        consul_host: "{{ lookup('env', 'CONSUL_HOST') }}"
        consul_port: "{{ lookup('env', 'CONSUL_PORT') }}"
        consul_token: "{{ lookup('env', 'CONSUL_TOKEN') }}"


    - name: retrieving a KV from a remote cluster on non default port
      ansible.builtin.debug:
        msg: "{{ lookup('community.general.consul_kv', 'config/resource_management/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) }}"

    - set_fact:
        keycloak_config: "{{ lookup('community.general.consul_kv', 'config/keycloak/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        awx_config: "{{ lookup('community.general.consul_kv', 'config/awx/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        consul_config: "{{ lookup('community.general.consul_kv', 'config/consul/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        vault_config: "{{ lookup('community.general.consul_kv', 'config/vault/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        resource_management_config: "{{ lookup('community.general.consul_kv', 'config/resource_management/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        resource_management_keycloak_config: "{{ lookup('community.general.consul_kv', 'config/resource_management/keycloak', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        service_management_config: "{{ lookup('community.general.consul_kv', 'config/service_management/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        service_management_keycloak_config: "{{ lookup('community.general.consul_kv', 'config/service_management/keycloak', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        notification_service_config: "{{ lookup('community.general.consul_kv', 'config/notification_service/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        notification_service_keycloak_config: "{{ lookup('community.general.consul_kv', 'config/notification_service/keycloak', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        information_service_config: "{{ lookup('community.general.consul_kv', 'config/information_service/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        information_service_keycloak_config: "{{ lookup('community.general.consul_kv', 'config/information_service/keycloak', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        catalog_service_config: "{{ lookup('community.general.consul_kv', 'config/catalog_service/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        monitoring_config: "{{ lookup('community.general.consul_kv', 'config/monitoring/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"
        minio_config: "{{ lookup('community.general.consul_kv', 'config/minio/data', scheme=consul_scheme, host=consul_host, port=consul_port, token=consul_token) | from_yaml }}"

    - set_fact:
        service_urls: {}

    - name: "Get service config from Consul"
      include_tasks: discover_consul_service.yml
      vars:
        _service_name: "{{ item.service_name }}"
      loop:
        - service_name: "resource-management"
        - service_name: "service-management"
        - service_name: "notification-service"
        - service_name: "information-service"
        - service_name: "awx"
        - service_name: "keycloak"
        - service_name: "aas-gui"
        - service_name: "catalog-service"
        - service_name: "minio"

    - debug:
        var: service_urls

    - name: "Ensures /project/_config_generated dir exists"
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "/project/_config_generated"
        - "/project/_config_generated/keycloak"
        - "/project/_config_generated/keycloak/notification-service"
        - "/project/_config_generated/keycloak/resource-management"
        - "/project/_config_generated/keycloak/service-management"

    - name: "Copy slm-config"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
       - src: /templates/slm-config.yml
         dest: /project/_config_generated/slm-config.yml

    - name: "Update config in application.yml files"
      include_tasks: update_application_properties.yml
      vars:
        _application_yml_file: "{{ module.application_yml_file }}"
        _app_config: "{{ module.app_config }}"
      when: CONFIGURE_CORE_PROJECT|default(false)|bool == true
      loop_control:
        loop_var: module
      loop:
        - application_yml_file: /project/notification_service/notification_service.service/notification_service.service.rest/src/main/resources/application.yml
          app_config: "{{ notification_service_config }}"
        - application_yml_file: /project/information_service/information_service.service/information_service.service.impl/src/main/resources/application.yml
          app_config: "{{ information_service_config }}"
        - application_yml_file: /project/resource_management/resource_management.service/resource_management.service.rest/src/main/resources/application.yml
          app_config: "{{ resource_management_config }}"
        - application_yml_file: /project/resource_management/resource_management.service/resource_management.service.initializer/src/main/resources/application.yml
          app_config: "{{ service_management_config }}"
        - application_yml_file: /project/service_management/service_management.service/service_management.service.rest/src/main/resources/application.yml
          app_config: "{{ service_management_config }}"
        - application_yml_file: /project/service_management/service_management.service/service_management.service.initializer/src/main/resources/application.yml
          app_config: "{{ service_management_config }}"
        - application_yml_file: /project/catalog/catalog.service/catalog.service.app/src/main/resources/application.yml
          app_config: "{{ catalog_service_config }}"

    - name: "Copy application properties"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - src: /templates/ui/.env.development
          dest: /project/ui/.env.development
      when: CONFIGURE_CORE_PROJECT|default(false)|bool == true
