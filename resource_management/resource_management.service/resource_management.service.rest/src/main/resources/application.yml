### Application
application:
  name: "^project.artifactId^"
  version: "^project.version^"
  timestamp: "^timestamp^"

### Deployment
deployment:
  hostname: localhost
  scheme: "http"
  port: ${server.port}

### Server / API
server:
  port: 9010
  error:
    include-message: always

open-api:
  title: Resource Management
  description: REST API of Resource Management
  version: "^project.version^"
  contact:
    name: Fraunhofer IPA
    url: https://www.ipa.fraunhofer.de
    email: matthias.schneider@ipa.fraunhofer.de

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    tags-sorter: alpha
    operations-sorter: alpha
    oauth:
      clientId: ui
      clientSecret: unused-and-not-required

### Database
database:
  host: 127.0.0.1
  port: 3310
  schema: resources
  username: resource-management
  password: password

### Spring
spring:
  application:
    name: resource_management
  main:
    allow-bean-definition-overriding: true
  config:
    import: "consul:"
  cloud:
    consul:
      host: ${consul.host}
      port: ${consul.port}
      discovery:
        enabled: true
        hostname: ${deployment.hostname}
        port: ${deployment.port}
        acl-token: ${consul.acl-token}
        register-health-check: true
        tags: slm, backend, ${spring.application.name}
        service-name: ${spring.application.name}
        metadata:
          version: ${application.version}
      config:
        enabled: true
        fail-fast: true
        profileSeparator: '::'
        format: YAML
        acl-token: ${consul.acl-token}
  security:
    user:
      name: "user"
      password: "password"
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        type:
          preferred_uuid_jdbc_type: CHAR
  datasource:
    driver-class-name=org: 'mariadb.jdbc.Driver'
    url: jdbc:mariadb://${database.host}:${database.port}/${database.schema}?createDatabaseIfNotExist=true&serverTimezone=UTC
    username: ${database.username}
    password: ${database.password}
  sql:
    init:
      platform: mysql
      mode: always

management:
  endpoints:
    web.exposure.include: health,info
  info:
    git.enabled: false

### Components - Internal
notification-service:
  scheme: "http"
  host: "localhost"
  port: 9001

### Security
security:
    auth-white-list: ""
    origins: "*"

### Keycloak
keycloak:
   tenants:
      config-path: consul:keycloak

### AWX
awx:
  scheme: http
  host: localhost
  port: 8013
  username: admin
  password: password
  polling-interval-in-s: 4
  default-execution-environment: AWX-EE-SLM-1.4.0-SNAPSHOT

### Vault
vault:
  scheme: http
  host: localhost
  port: 8200
  authentication: APPROLE
  #  token: your-secret-token
  app-role:
    role-id: resource-management
    secret-id: your-secret-id
    app-role-path: approle

### AAS
aas:
  broker:
    host: localhost
    port: 1884
  aas-registry:
    scheme: http
    host: localhost
    port: 8082
    path:
    url: ${aas.aas-registry.scheme}://${aas.aas-registry.host}:${aas.aas-registry.port}${aas.aas-registry.path}
  aas-repository:
    scheme: http
    host: localhost
    port: 8081
    path:
    url: ${aas.aas-repository.scheme}://${aas.aas-repository.host}:${aas.aas-repository.port}${aas.aas-repository.path}
  submodel-registry:
    scheme: http
    host: localhost
    port: 8083
    path:
    url: ${aas.submodel-registry.scheme}://${aas.submodel-registry.host}:${aas.submodel-registry.port}${aas.submodel-registry.path}
  submodel-repository:
    scheme: http
    host: localhost
    port: 8081
    path:
    url: ${aas.submodel-repository.scheme}://${aas.submodel-repository.host}:${aas.submodel-repository.port}${aas.submodel-repository.path}
  concept-descriptions-repository:
    scheme: http
    host: localhost
    port: 8081
    path:
    url: ${aas.concept-descriptions-repository.scheme}://${aas.concept-descriptions-repository.host}:${aas.concept-descriptions-repository.port}${aas.concept-descriptions-repository.path}

### Consul
consul:
  scheme: http
  host: localhost
  port: 8500
  datacenter: fabos
  acl-token: your-consul-acl-token

### Monitoring
monitoring:
  service:
    url: http://localhost:9080

### Discovery
discovery:
  driver-registry:
    address: 10.17.167.87
    port: 50051