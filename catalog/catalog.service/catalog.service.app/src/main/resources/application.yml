### Application
application:
  name: "^project.artifactId^"
  version: "^project.version^"
  timestamp: "^timestamp^"

### Deployment
deployment:
  hostname: localhost
  path: ""

### Server / API
server:
  port: 10000
  error:
    include-message: always
  servlet:
    context-path: ${deployment.path}

open-api:
  title: Service Lifecycle Management Catalog
  description: REST API of Service Lifecycle Management Catalog
  version: "^project.version^"
  contact:
    name: Fraunhofer IPA
    url: https://www.ipa.fraunhofer.de
    email: matthias.schneider@ipa.fraunhofer.de

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    tags-sorter: alpha
    operations-sorter: alpha

### Database
database:
  host: localhost
  port: 3300
  schema: catalog
  username: catalog
  password: password

### Spring
spring:
  application:
    name: catalog_service
  config:
    import: "consul:"
  cloud:
    consul:
      host: ${consul.host}
      port: ${consul.port}
      discovery:
        enabled: true
        hostname: ${consul.service.address}
        port: ${consul.service.port}
        acl-token: ${consul.acl-token}
        register-health-check: true
        healthCheckPath: ${deployment.path}/actuator/health
        tags:
          - slm
          - backend
          - ${spring.application.name}
          - exposed
        service-name: ${spring.application.name}
        instance-id: ${consul.service.name}
        metadata:
          version: ${application.version}
      config:
        enabled: true
        fail-fast: true
        profileSeparator: '::'
        format: YAML
        acl-token: ${consul.acl-token}
  jpa:
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        type:
          preferred_uuid_jdbc_type: CHAR
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name=org: 'mariadb.jdbc.Driver'
    url: jdbc:mariadb://${database.host}:${database.port}/${database.schema}?createDatabaseIfNotExist=true&serverTimezone=UTC
    username: ${database.username}
    password: ${database.password}
  sql:
    init:
      mode: always
      platform: mysql

management:
  endpoints:
    web.exposure.include: health,info
  info:
    git.enabled: false

### Consul
consul:
  service:
    name: catalog-service
    address: host.docker.internal
    port: ${server.port}
  scheme: http
  host: localhost
  port: 8500
  datacenter: fabos
  acl-token: your-consul-acl-token
